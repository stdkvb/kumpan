input {
	transition: all $transitionDuration;
	padding: 10px 20px;
	border: 1px solid $grayB9;
	outline: none;
	@include regular-16;
	background-color: transparent;

	@include tablet_small {
		@include regular-14;
	}

	&:disabled {
		background-color: $grayB9;
		pointer-events: none;
		user-select: none;
	}
	&::placeholder {
		color: $grayB9;
	}

	&~.pristine-error {
		display: none;
	}

	&[aria-invalid=true] {
		&:not(:focus) {
			border: 1px solid $redDB;
		}	
	}

	&[type=tel],
	&[type=date] {
		@include FontFamilyZurichRegular;
	}

	&[type=date] {
		text-transform: uppercase;
		position: relative;

		&:hover {
			cursor: pointer;
		}
		&::-webkit-inner-spin-button,
		&::-webkit-calendar-picker-indicator {
			opacity: 0;			

			&:hover {
				cursor: pointer;
			}
		}
		
		&::after {
			content: url(@icons/calendar.svg);
			position: absolute;
			right: 20px;
			width: 24px;
			height: 24px;
			pointer-events: none;
		}
	}

	&[type=file] {
		border: none;
		padding: 0;
		opacity: 0;

		&:hover {
			cursor: pointer;
		}
	}

	.has-success & {
		&:not(:focus) {
			border: 1px solid $green22;
		}
	}


}

.input__container {
	position: relative;
	width: 100%;
	display: flex;
	flex-direction: column;
	gap: 10px;
	
	input {
		@include FontFamilyZurichRegular;
	}

	.input__label {
		@include regular-20;

		@include tablet_small {
			@include regular-14;
		}
	}
	
	&_file {
		position: relative;
		width: fit-content;

		&:hover {
			cursor: pointer;
		}

		.file-button {
			position: absolute;
			pointer-events: none;
			display: flex;
			align-items: center;
			gap: 10px;

			
			
			&::before {
				content: url(@icons/file.svg);
				width: 19px;
				height: 19px;
			}
		}
	}

	&_password {
		input[type="password"] {
			@include FontFamilyZurichRegular;
			padding-right: calc(.75rem + 26px);
		}

		.toggle-show-password-btn {
			position: absolute;
			display: flex;
			align-items: center;
			justify-content: center;
			width: 18px;
			height: 18px;
			bottom: 12px;
			right: 20px;
			cursor: pointer;
		}

		input[type="password"] + .toggle-show-password-btn {
			&::before {
				width: 18px;
				height: 18px;
				content: url("@icons/closeLock.svg");
			}
		}

		input[type="text"] + .toggle-show-password-btn {
			&::before {
				width: 18px;
				height: 18px;
				content: url("@icons/openLock.svg");
			}
		}
	}

	&_valid {
		input:not(:focus) {

		}
	}

	&_invalid {
		input:not(:focus) {

		}

		.error-message {
			display: block;
		}
	}

	.placeholder {
		position: absolute;
		color: $white;
		top: 1.0625rem;
		left: .75rem;

		-webkit-touch-callout: none;
		-webkit-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;
		user-select: none;
	}
}

.input-wrapper {
	display: flex;
	gap: 10px;

	input[type="number"]::-webkit-inner-spin-button,
	input[type="number"]::-webkit-outer-spin-button {
		-webkit-appearance: none;
		appearance: none;
		margin: 0;
	}

	input[type="number"] {
		@include FontFamilyZurichRegular;
		-moz-appearance: textfield;
		color: $black25;
		text-align: center;
		@include regular-16;
		padding: 0;
		width: 30px;
	}

	button {
		@include regular-26;
		max-width: 10px;
		cursor: pointer;
		color: $black25;
		background: transparent;
		border: none;
		transition: color $transitionDuration ease-in-out;
		user-select: none;

		&:hover {
			color: $green22;
		}

		&._disabled {
			pointer-events: none;
			color: $grayB9;
		}
	}

	.quantity {
		pointer-events: none;
	}
}

.input-wrapper * {
	border: none;
	flex: 1;
}

.input__reset {
	width: 24px;
	height: 24px;
	position: absolute;
	border: none;
	background-color: transparent;
	background-image: url('@icons/close-icon.svg');
	background-position: center;
	background-repeat: no-repeat;
	right: 20px;
	top: 45px;

	&:hover {
		cursor: pointer;
	}
}